DROP DATABASE IF EXISTS DW;
CREATE DATABASE DW;
USE DW;

CREATE TABLE DIM_SEVERIDADE (
  SK_SEVERIDADE INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  GRAU_SEVERIDADE VARCHAR(50) NOT NULL,
  NK_SEVERIDADE INTEGER UNSIGNED NULL,
  PRIMARY KEY(SK_SEVERIDADE)
);

CREATE TABLE DIM_PARTE_CORPO (
  SK_PARTE_CORPO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NOME VARCHAR(50) NOT NULL,
  NK_PARTE_CORPO INTEGER UNSIGNED NULL,
  PRIMARY KEY(SK_PARTE_CORPO)
);

CREATE TABLE DIM_TIPO_LESAO (
  SK_TIPO_LESAO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NOME VARCHAR(50) NOT NULL,
  NK_TIPO_LESAO INTEGER UNSIGNED NULL,
  PRIMARY KEY(SK_TIPO_LESAO)
);

CREATE TABLE DIM_TEMPO (
  SK_TEMPO INTEGER UNSIGNED NOT NULL,
  ANO INTEGER UNSIGNED NULL,
  MES CHAR(10) NULL,
  MES_ANO CHAR(2) NULL,
  DIA_MES INTEGER UNSIGNED NULL,
  DIA CHAR(10) NULL,
  DIA_SEMANA INTEGER UNSIGNED NULL,
  TIPO_DIA CHAR(15) NOT NULL DEFAULT 'DIA DA SEMANA',
  DIA_ANO INTEGER UNSIGNED NULL,
  SEMANA_ANO CHAR(2) NULL,
  TRIMESTRE INTEGER UNSIGNED NULL,
  DATA_ANTERIOR DATE NOT NULL DEFAULT '0000-00-00',
  PROXIMA_DATA DATE NOT NULL DEFAULT '0000-00-00',
  DATA_ATUAL DATE NOT NULL,
  PRIMARY KEY(SK_TEMPO),
  UNIQUE INDEX DIM_TEMPO_index1610(DATA_ATUAL)
);

CREATE TABLE DIM_FUNCAO (
  SK_FUNCAO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NOME VARCHAR(50) NOT NULL,
  NK_FUNCAO INTEGER UNSIGNED NULL,
  PRIMARY KEY(SK_FUNCAO)
);

CREATE TABLE DIM_COLABORADOR (
  SK_COLABORADOR INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NOME VARCHAR(50) NOT NULL,
  MATRICULA INTEGER UNSIGNED NOT NULL,
  NK_COLABORADOR INTEGER UNSIGNED NULL,
  PRIMARY KEY(SK_COLABORADOR)
);

CREATE TABLE DIM_CLASSIFICACAO_ANOMALIA (
  SK_CLASSIFICACAO_ANOMALIA INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NOME VARCHAR(50) NOT NULL,
  NK_CLASSIFICACAO_ANOMALIA INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(SK_CLASSIFICACAO_ANOMALIA)
);

CREATE TABLE DIM_EMPRESA (
  SK_EMPRESA INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NOME VARCHAR(50) NOT NULL,
  NK_EMPRESA INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(SK_EMPRESA)
);

CREATE TABLE DIM_CONTRATO (
  SK_CONTRATO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NOME VARCHAR(50) NOT NULL,
  NK_CONTRATO INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(SK_CONTRATO)
);

CREATE TABLE FT_ANOMALIA (
  SK_CLASSIFICACAO_ANOMALIA INTEGER UNSIGNED NOT NULL,
  SK_COLABORADOR INTEGER UNSIGNED NOT NULL,
  SK_FUNCAO INTEGER UNSIGNED NOT NULL,
  SK_TEMPO INTEGER UNSIGNED NOT NULL,
  SK_CONTRATO INTEGER UNSIGNED NOT NULL,
  SK_EMPRESA INTEGER UNSIGNED NOT NULL,
  SK_TIPO_LESAO INTEGER UNSIGNED NOT NULL,
  SK_PARTE_CORPO INTEGER UNSIGNED NOT NULL,
  SK_SEVERIDADE INTEGER UNSIGNED NOT NULL,
  DESCRICAO VARCHAR(50) NOT NULL,
  INDEX FATO_ANOMALIA_FKIndex1(SK_CLASSIFICACAO_ANOMALIA),
  INDEX FATO_ANOMALIA_FKIndex2(SK_COLABORADOR),
  INDEX FATO_ANOMALIA_FKIndex3(SK_FUNCAO),
  INDEX FATO_ANOMALIA_FKIndex4(SK_TEMPO),
  INDEX FATO_ANOMALIA_FKIndex5(SK_CONTRATO),
  INDEX FATO_ANOMALIA_FKIndex6(SK_EMPRESA),
  INDEX FATO_ANOMALIA_FKIndex7(SK_TIPO_LESAO),
  INDEX FATO_ANOMALIA_FKIndex8(SK_PARTE_CORPO),
  INDEX FATO_ANOMALIA_FKIndex9(SK_SEVERIDADE),
  FOREIGN KEY(SK_CLASSIFICACAO_ANOMALIA)
    REFERENCES DIM_CLASSIFICACAO_ANOMALIA(SK_CLASSIFICACAO_ANOMALIA)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SK_COLABORADOR)
    REFERENCES DIM_COLABORADOR(SK_COLABORADOR)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SK_FUNCAO)
    REFERENCES DIM_FUNCAO(SK_FUNCAO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SK_TEMPO)
    REFERENCES DIM_TEMPO(SK_TEMPO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SK_CONTRATO)
    REFERENCES DIM_CONTRATO(SK_CONTRATO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SK_EMPRESA)
    REFERENCES DIM_EMPRESA(SK_EMPRESA)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SK_TIPO_LESAO)
    REFERENCES DIM_TIPO_LESAO(SK_TIPO_LESAO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SK_PARTE_CORPO)
    REFERENCES DIM_PARTE_CORPO(SK_PARTE_CORPO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SK_SEVERIDADE)
    REFERENCES DIM_SEVERIDADE(SK_SEVERIDADE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);
